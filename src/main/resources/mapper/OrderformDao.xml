<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.cbb.wasteRecovery.dao.OrderformDao">
<resultMap type="org.cbb.wasteRecovery.bean.Orderform" id="order">
  <id property="id" column="id" />
  <result property="uid" column="uid"/>
  <result property="cid" column="cid"/>
  <result property="aid" column="aid"/>
  <result property="state" column="state"/>
  <result property="weight" column="weight"/>
  <result property="createTime" column="createTime"/>
  <result property="appointTime" column="appointTime"/>
  <result property="updateTime" column="updateTime"/>
  <result property="price" column="price"/>
  <collection property="user" resultMap="org.cbb.wasteRecovery.dao.UserDao.User1"/>
  <collection property="collector" resultMap="org.cbb.wasteRecovery.dao.CollectorDao.Collect1"/>
  <collection property="scrapMessageList" resultMap="org.cbb.wasteRecovery.dao.ScrapMessageDao.Message1"/>
  <collection property="address" resultMap="org.cbb.wasteRecovery.dao.UserAddressDao.Address"/>
</resultMap>
    <resultMap type="org.cbb.wasteRecovery.bean.Orderform" id="order1">
        <id property="id" column="id"/>
        <result property="uid" column="uid"/>
        <result property="cid" column="cid"/>
        <result property="aid" column="aid"/>
        <result property="state" column="state"/>
        <result property="weight" column="weight"/>
        <result property="createTime" column="createTime"/>
        <result property="appointTime" column="appointTime"/>
        <result property="updateTime" column="updateTime"/>
        <result property="price" column="price"/>
    </resultMap>
    <insert id="insertOrderform">

    insert  into orderform(state,createTime,appointTime,aid,uid)
    values (#{state},#{createTime},#{appointTime},#{aid},#{uid})

    </insert>


    <sql id="columns">c.realName,c.sex,c.password,c.phoneNumber,c.photo,c.idCardNum,c.idCardFrontPhoto,c.idCardBackPhoto,c.createTime,c.avater,c.staid,c.state,c.volume,
    o.id,o.state,o.weight,o.createTime,o.appointTime,o.updateTime,o.price,o.aid,o.uid,o.cid,
    a.id,a.uid,a.address,a.detail,a.community_id,a.geohash,a.position,
    u.state,u.avater,u.openid,
    sc.weight,sc.price,sc.oid,sc.scrapid</sql>

     <select id="selectById"  resultMap="order" parameterType="long">
        select <include refid="columns"/>
        from (((orderform o INNER JOIN user u ON o.uid=u.openid)LEFT JOIN collector c ON o.cid=c.id)
        LEFT JOIN scrapmessage sc ON o.id=sc.oid)INNER JOIN useraddress  a ON o.aid=a.id
        where
           o.id=#{id}
       
        
    </select>
    
    <select id="selectByCId" resultMap="order">
        select <include refid="columns"/>
        from (((orderform o INNER JOIN user u ON o.uid=u.openid)INNER JOIN collector c ON o.cid=c.id)
        INNER JOIN scrapmessage sc ON o.id=sc.oid)INNER JOIN useraddress  a ON o.aid=a.id
        where
           o.cid=#{cid}
        and  o.state=#{state}
        order BY o.id
        limit #{offset},#{limit}
       
        
    </select>
    
    <select id="selectByUId" resultMap="order">
        select <include refid="columns"/>
        from (((orderform o INNER JOIN user u ON o.uid=u.openid)INNER JOIN collector c ON o.cid=c.id)
        INNER JOIN scrapmessage sc ON o.id=sc.oid)INNER JOIN useraddress  a ON o.aid=a.id
        where
          o.uid=#{uid}
        and  o.state=#{state}
        order BY o.id
        limit #{offset},#{limit}
        
    </select>
    

    

    
    
    <select id="selectByState" resultMap="order">
        select <include refid="columns"/>
        from (((orderform o INNER JOIN user u ON o.uid=u.openid)INNER JOIN collector c ON o.cid=c.id)
        INNER JOIN scrapmessage sc ON o.id=sc.oid)INNER JOIN useraddress  a ON o.aid=a.id
        where
           o.state=#{state}
        order BY o.id
        limit #{offset},#{limit}
        
    </select>
    
    <select id="selectByPos" resultType="Orderform">
        select x(ua.position) "address.locationX",y(ua.position) "address.locationY"
        from orderform o INNER JOIN useraddress ua ON o.aid = ua.id where ua.geohash LIKE #{geohash} '%' AND
        st_distance_sphere(point(#{locationX},#{locationY}),ua.position)<![CDATA[ <= ]]>#{distance}
        AND o.uid!=#{openid}
        
    </select>


    
    <update id="updateOrderform">
       
        update
          orderform
        set
          aid = #{aid},
          appointTime=#{appointTime}
        where
          id = #{id}
      
    </update>
    
    <update id="submitData">
       
        update
          orderform
        set
          uid= #{uid},
          cid = #{cid},
          aid= #{aid},
          price = #{price},
          state = #{state},
          weight = #{weight}
        where
          id = #{id}
      
    </update>
    
    <delete id="deleteOrderform">
       delete
         from
         orderform
       where
           id=#{id}
    
    </delete>
</mapper>