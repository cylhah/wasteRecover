<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.cbb.wasteRecovery.dao.OrderformDao">
<resultMap type="org.cbb.wasteRecovery.bean.Orderform" id="order">
  <id property="id" column="id" />
  <result property="state" column="state"/>
  <result property="weight" column="weight"/>
  <result property="createTime" column="createTime"/>
  <result property="appointTime" column="appointTime"/>
  <result property="updateTime" column="updateTime"/>
  <result property="price" column="price"/>
    <result property="weightState" column="weight_state"/>
  <collection property="user" resultMap="org.cbb.wasteRecovery.dao.UserDao.User1"/>
  <collection property="collector" resultMap="org.cbb.wasteRecovery.dao.CollectorDao.Collect1"/>
  <collection property="scrapMessageList" resultMap="org.cbb.wasteRecovery.dao.ScrapMessageDao.ref_sm"/>
  <collection property="address" resultMap="org.cbb.wasteRecovery.dao.UserAddressDao.ref_address"/>
</resultMap>
    <resultMap type="org.cbb.wasteRecovery.bean.Orderform" id="order1">
        <id property="id" column="o_id"/>
        <result property="state" column="o_state"/>
        <result property="weight" column="o_weight"/>
        <result property="createTime" column="o_createTime"/>
        <result property="appointTime" column="o_appointTime"/>
        <result property="updateTime" column="o_updateTime"/>
        <result property="price" column="o_price"/>
    </resultMap>

    <sql id="columns">

    </sql>

	<sql id="normalJoin">
        (
            (
                (
                    orderform o INNER JOIN user u
                    ON o.uid=u.openid
                )
                    LEFT JOIN collector c
                    ON o.cid=c.id
            )
                LEFT JOIN (scrapmessage sm
                INNER JOIN scrap scr
                ON scr.id=sm.scrapid)
                ON o.id=sm.oid
        )
        INNER JOIN useraddress  a
        ON o.aid=a.id
	</sql>


	<insert id="insertOrderform">

    insert  into orderform(appointTime,aid,uid,weight_state)
    values (#{appointTime},#{aid},#{uid},#{weightState})

    </insert>

     <select id="selectById"  resultMap="order" parameterType="long">
        select
            o.id,o.state,o.weight,o.createTime,o.appointTime,o.updateTime,o.price,o.weight_state,
            c.id col_id,
            c.realName col_realName,
            c.sex col_sex,
            c.phoneNumber col_phoneNumber,
            c.idCardNum col_idCardNum,
            c.createTime col_createTime,
            c.avater col_avater,
            c.state col_state,
            c.volume col_volume,
            a.id ua_id,
            a.name ua_name,
            a.address ua_address,
            u.avater u_avater,
            u.openid u_openid,
            sm.weight sm_weight,
            sm.price sm_price,
            scr.id scr_id,
            scr.name scr_name
		from <include refid="normalJoin"/>

        where 
			o.id=#{id}     
        
    </select>



    <select id="filterOrderPage" resultMap="order" parameterType="java.util.Map">
        select
            o.id,o.state,o.updateTime,o.price,
            c.id col_id,
            c.realName col_realName,
            a.id ua_id,
            a.address ua_address,
            a.name ua_name,
            u.openid u_openid,
            sm.weight sm_weight,
            scr.name scr_name
        from <include refid="normalJoin"/>
        <where>
            <foreach collection="constrains" item="val" index="key" open="" separator="AND" close="">
                <choose>
                    <when test="key.equals(&quot;o.updateTime&quot;)">
                        ${key} Like #{val} '%'
                    </when>
                    <otherwise>
                        ${key} = #{val}
                    </otherwise>
                </choose>
            </foreach>
        </where>

    </select>





    
    <select id="selectByPos" resultType="Orderform">
        select x(ua.position) "address.locationX",y(ua.position) "address.locationY"
        from 
			orderform o INNER JOIN useraddress ua 
			ON o.aid = ua.id 
		where 
			ua.geohash LIKE #{geohash} '%' 
			AND st_distance_sphere(point(#{locationX},#{locationY}),ua.position)<![CDATA[ <= ]]>#{distance}
			AND o.uid!=#{openid}
        
    </select>


    
    <update id="updateOrderform">
       
        update
          orderform
        set
          state=#{state}
        where
          id = #{id}
      
    </update>

    <update id="updateCollectorAndState">

        update
            orderform
        set
            state=#{state},
            cid=#{cid}
        where
            id = #{id}

    </update>

    <update id="updateRank">

        update
            orderform
        set
            rank=#{rank}
        where
            id = #{id}

    </update>
    
    <update id="submitData">
       
        update
          orderform
        set
          state = #{state}
        where
          id = #{id}
      
    </update>
    
    <delete id="deleteOrderform">
       delete
       from
         orderform
       where
           id=#{id}
    
    </delete>
</mapper>