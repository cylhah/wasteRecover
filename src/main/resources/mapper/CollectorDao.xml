<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.cbb.wasteRecovery.dao.CollectorDao">
<resultMap type="org.cbb.wasteRecovery.bean.Collector" id="Collect">
  <id property="id" column="id"/>
  <result property="name" column="name"/>
  <result property="sex" column="sex"/>
  <result property="password" column="password"/>
  <result property="avater" column="avater"/>
  <result property="email" column="email"/>
  <result property="phoneNumber" column="phoneNumber"/>
  <result property="photo" column="photo"/> 
  <result property="idCardNum" column="idCardNum"/>
  <result property="idCardFrontPhoto" column="idCardFrontPhoto"/>
  <result property="idCardBackPhoto" column="idCardBackPhoto"/>
   <result property="volume" column="volume"/>
  <result property="creditValue" column="creditValue"/> 
  <result property="bankAccount" column="bankAccount"/> 
  <result property="state" column="state"/> 
  <result property="createTime" column="createTime"/> 
  <result property="locationX" column="locationX"/>
  <result property="locationY" column="locationY"/>
  <result property="geoHash" column="geoHash"/>
   <collection property="orderformList" resultMap="org.cbb.wasteRecovery.dao.OrderformDao.order"/>

</resultMap>

    <insert id="insertCollector">

    insert  into collector(realName,sex,password,phoneNumber,photo,idCardNum,idCardFrontPhoto,idCardBackPhoto,createTime,avater,staid,state,volume)
    values (#{realName},#{sex},#{password},#{phoneNumber},#{photo},#{idCardNum},#{idCardFrontPhoto},#{idCardBackPhoto},#{createTime},#{avater},#{staid},#{state},#{volume})
   </insert>

    <sql id="columns">realName,sex,password,phoneNumber,photo,idCardNum,idCardFrontPhoto,idCardBackPhoto,createTime,avater,staid,state,volume</sql>

    <select id="selectById" resultType="Collector" parameterType="int">
        select <include refid="columns"/>
        from collector

        where
           id=#{id}
          
        
    </select>

    <select id="selectByPhoneNum" resultType="Collector" parameterType="String">
        select <include refid="columns"/>
        from collector

        where
           phoneNumber=#{phoneNumber}
          
        
    </select>
    
     <select id="selectByPhoneNumAndPass" resultType="Collector" >
        select <include refid="columns"/>
        from collector

        where
          phoneNumber=#{phoneNumber}
        and password=#{password}
        
    </select>

    <select id="selectByIdCardNum"  resultType="Collector" parameterType="String">
        select <include refid="columns"/>
        from collector

        where
           idCardNum=#{idCardNum}
          
        
    </select>
    
    <select id="selectByName" resultType="Collector">
        select <include refid="columns"/>
        from collector

        where
         realName=#{realName}
        order BY id
        limit #{offset},#{limit}
          
        
    </select>
    

    

    
    <update id="updatePhoneNum">
       
        update
          collector
        set
          phoneNumber = #{phoneNumber}
        where
          id = #{id}
      
    </update>
    
    <update id="updatePassword">
       
        update
          collector
        set
          password = #{password}
        where
          id = #{id}
      
    </update>
    
    <update id="updateCreditValue">
       
        update
          collector
        set
          creditValue = #{creditValue}
        where
          id = #{id}
      
    </update>

    
    <update id="addVolume">
       
        update
          collector
        set
          volume = volume+1
        where
          id = #{id}
      
    </update>

    
    <update id="updatePersonData">
       
        update
          collector
        set
           phoneNumber = #{phoneNumber},
           password = #{password},
           realName=#{realName},
           sex=#{sex},
           avater=#{avater}
        where
          id = #{id}
       
    </update>

    <update id="updateState">

        update
        collector
        set
        state = #{state}
        where
        id = #{id}

    </update>

    <delete id="deleteCollector">
        delete
        from
        collector
        where
        id=#{id}

    </delete>

</mapper>